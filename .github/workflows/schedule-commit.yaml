on:
  schedule:
    - cron: "1 1 1 * *"

jobs:
  generate-data:
    runs-on: ${{ matrix.config.os }}
    
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          install.packages('sessioninfo')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
        
      - name: Create branch
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git branch testbranch
          git checkout testbranch
          
      - name: Generate data & plots
        run: |
          source("R/job.R")
          source("R/regularDashboardRun.R")
          source("R/colinsPlots.R")
        shell: Rscript {0} 
    
      - name: Push to branch
        run: |
          git add --all
          git commit -am "add data & plots"
          git pull
          git push -u origin testbranch 
          
     # - name: Create Pull Request
     #   uses: peter-evans/create-pull-request@v3
     #   with:
     #     token: ${{ secrets.GITHUB_TOKEN }}
     #     commit-message: Auto Pull Request
     #     title: '[Example] Update files'
     #     body: >
     #      Auto-created Pull Request
     #       This PR is auto-generated by 
     #       [create-pull-request](https://github.com/peter-evans/create-pull-request).
     #    labels: report, automated pr

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
